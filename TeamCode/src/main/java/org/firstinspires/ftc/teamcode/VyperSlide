
package org.firstinspires.ftc.teamcode;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;

@TeleOp(name = "")
public class vyperSlideMechanism extends LinearOpMode {
  private Servo clawServo;
  private DcMotor clawMotor;
  
  private int toggleClaw;
  private Boolean aDebounce;
  
   //left stick vyper up down
   //right stick arm rotation
   // Y all the way opem
   //A toggle between partial close and just closed
  @Override
  public void runOpMode() {
   
    clawServo = hardwareMap.get(Servo.class,"claw");
    clawMotor = hardwareMap.get(DcMotor.class, "clawmotor");
    toggleClaw = -1;
    aDebounce = true;
  
    double counter = 0;
    waitForStart();
      while (opModeIsActive()) {
        
        if (gamepad2.a){
          if (aDebounce){
              aDebounce = false;
              toggleClaw *= -1;
            }
        }else{
          aDebounce = true;
        }
        
        if (toggleClaw == 1){
          clawServo.setPosition(0.05);
        }else{
          clawServo.setPosition(0.5);
        }
        if(gamepad2.right_stick_y > 0)
          clawMotor.setPower(gamepad2.right_stick_y*-0.25);
        else if(gamepad2.right_stick_y > 0){
          clawMotor.setPower(gamepad2.right_stick_y*0.1);   
        }
           
        clawMotor.setTargetPosition(0);
        
        telemetry.addData("Status", "Running");
        telemetry.addData("inputButtonA", gamepad2.a);
        telemetry.addData("toggleClaw", toggleClaw);
        telemetry.addData("zeroPowerDate", clawMotor.getCurrentPosition());
        telemetry.addData("zeroPowerDate", clawMotor.isBusy());
        
        telemetry.update();
        

        }
        }
}
